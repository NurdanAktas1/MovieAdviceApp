// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Context;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20221025142317_Init4")]
    partial class Init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Author");

                    b.Property<string>("CommentId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CommentId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Content");

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("MovieId");

                    b.Property<decimal?>("Point")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Point");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("datetime2")
                        .HasColumnName("Updated_at");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Adult")
                        .HasColumnType("bit")
                        .HasColumnName("Adult");

                    b.Property<string>("Backdrop_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Backdrop_path");

                    b.Property<string>("Media_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Media_type");

                    b.Property<string>("Original_language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Original_language");

                    b.Property<string>("Original_title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Original_title");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Overview");

                    b.Property<double>("Popularity")
                        .HasColumnType("float")
                        .HasColumnName("Popularity");

                    b.Property<string>("Poster_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poster_path");

                    b.Property<string>("Release_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Release_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<bool>("Video")
                        .HasColumnType("bit")
                        .HasColumnName("Video");

                    b.Property<double>("Vote_average")
                        .HasColumnType("float")
                        .HasColumnName("Vote_average");

                    b.Property<int>("Vote_count")
                        .HasColumnType("int")
                        .HasColumnName("Vote_count");

                    b.HasKey("Id");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adult = false,
                            Backdrop_path = "den",
                            Media_type = "den",
                            Original_language = "",
                            Original_title = "deneme",
                            Overview = "",
                            Popularity = 9.5,
                            Poster_path = "",
                            Release_date = "",
                            Title = "",
                            Video = true,
                            Vote_average = 5.0,
                            Vote_count = 752
                        });
                });

            modelBuilder.Entity("Domain.Entities.Comment", b =>
                {
                    b.HasOne("Domain.Entities.Movie", "Movie")
                        .WithMany("Comments")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Domain.Entities.Movie", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
